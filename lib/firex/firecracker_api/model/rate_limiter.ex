# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Firex.FirecrackerAPI.Model.RateLimiter do
  @moduledoc """
  Defines an IO rate limiter with independent bytes/s and ops/s limits. Limits are defined by configuring each of the _bandwidth_ and _ops_ token buckets.
  """

  @derive [Poison.Encoder]
  defstruct [
    :bandwidth,
    :ops
  ]

  @type t :: %__MODULE__{
          :bandwidth => Firex.FirecrackerAPI.Model.TokenBucket.t() | nil,
          :ops => Firex.FirecrackerAPI.Model.TokenBucket.t() | nil
        }
end

defimpl Poison.Decoder, for: Firex.FirecrackerAPI.Model.RateLimiter do
  import Firex.FirecrackerAPI.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:bandwidth, :struct, Firex.FirecrackerAPI.Model.TokenBucket, options)
    |> deserialize(:ops, :struct, Firex.FirecrackerAPI.Model.TokenBucket, options)
  end
end
